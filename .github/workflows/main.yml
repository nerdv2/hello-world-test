name: Deploy to VM

on:
  push:
    branches:
      - main
      - live

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set the tag name
      id: set-tag-name
      run: |
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          echo "::set-output name=tag::dev"
        else
          echo "::set-output name=tag::live"
        fi

    - name: Build and push Docker image
      run: |
        TAG=${{ steps.set-tag-name.outputs.tag }}
        docker build -t ridhwan31/hello-world-test:$TAG .
        docker push ridhwan31/hello-world-test:$TAG

    - name: Deploy to VM
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_HOST: 128.199.167.11
        SSH_USER: root
      run: |
        TAG=${{ steps.set-tag-name.outputs.tag }}
        echo "$SSH_PRIVATE_KEY" > private_key
        chmod 600 private_key

        # Check if container with the same name already exists and remove it
        ssh -i private_key -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
          if docker ps -a --format '{{.Names}}' | grep -q '^hello-world-test-$TAG$'; then
            docker stop hello-world-test-$TAG
            docker rm hello-world-test-$TAG
          fi
        "

        # Pull the latest image and run the container
        ssh -i private_key -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
          docker pull ridhwan31/hello-world-test:$TAG
          docker run -d -p $(if [ $TAG == 'dev' ]; then echo '3080'; else echo '3090'; fi):3000 --name hello-world-test-$TAG ridhwan31/hello-world-test:$TAG
        "
